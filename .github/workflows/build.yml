name: Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Create .env file
      run: |
        echo TEST_DATABASE_URL=postgresql://postgres:postgres@localhost:5432/testdb >> .env
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Set up DB Schema
      env:
        PGPASSWORD: postgres
      run: psql -h localhost -U postgres -d testdb -a -f testing/sql/create_tables.sql
    - name: Test with pytest
      run: |
        pytest

#    - name: Install dependencies
#      run: |
#        # Install your project's dependencies here.
#
#    - name: Run tests
#      run: |
#        # Run your tests here.
#        # In your tests, connect to PostgreSQL using:
#        # Host: localhost
#        # Port: 5432
#        # User: user
#        # Password: password
#        # Database: testdb
